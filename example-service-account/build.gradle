import cn.nvr.iothub.dependency.DependencyLibrary

plugins {
    id('dependency.manager.plugin')
}

bootJar {
    enabled true
}

group 'cn.nvr.microservices.toolkit'
version = '0.0.1'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    //springboot lib
    implementation(project(':spring-cloud-kubernetes-loadbalancer-debugging-starter'))
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    //org.springframework.boot.gradle.plugin.JavaPluginAction.configureDevelopmentOnlyConfiguration
    //developmentOnly("org.springframework.boot:spring-boot-devtools")
    //测试环境依赖. 生产环境去除
    developmentStage("org.springframework.boot:spring-boot-devtools")

    //kubernetes
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-kubernetes-fabric8-discovery'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-kubernetes-fabric8-loadbalancer'
//    implementation group: 'org.springframework.cloud', name: 'spring-cloud-kubernetes-fabric8-config'

    //nvr lib

    //springcloud
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'org.springframework.cloud:spring-cloud-starter-loadbalancer'
    implementation DependencyLibrary.SNAKEYAML
    implementation DependencyLibrary.CAFFEINE

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}